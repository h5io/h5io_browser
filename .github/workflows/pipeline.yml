name: Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: psf/black@stable
      with:
        options: "--check --diff"
        src: ./${{ github.event.repository.name }}

  notebooks:
    needs: [black]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Merge Notebook environment
        run: |
          cp .ci_support/environment.yml environment.yml
          tail --lines=+4 .ci_support/environment-notebooks.yml >> environment.yml
          echo -e "channels:\n  - conda-forge\n" > .condarc
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.13"
          miniforge-version: latest
          condarc-file: .condarc
          environment-file: environment.yml
      - name: Test
        shell: bash -l {0}
        run: |
          pip install versioneer[toml]==0.29
          pip install . --no-deps --no-build-isolation
          ./.ci_support/build_notebooks.sh

  pip_check:
    needs: [black]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Conda config
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.13"
        miniforge-version: latest
        condarc-file: .condarc
        environment-file: .ci_support/environment.yml
    - name: Setup
      shell: bash -l {0}
      run: |
        pip install versioneer[toml]==0.29
        pip install . --no-deps --no-build-isolation
        pip check

  unittest_matrix:
    needs: [black]
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
        - operating-system: macos-latest
          python-version: '3.13'
          label: osx-64-py-3-13

        - operating-system: ubuntu-latest
          python-version: '3.13'
          label: linux-64-py-3-13

        - operating-system: windows-latest
          python-version: '3.12'
          label: win-64-py-3-13

        - operating-system: ubuntu-latest
          python-version: '3.12'
          label: linux-64-py-3-12

        - operating-system: ubuntu-latest
          python-version: '3.11'
          label: linux-64-py-3-11

        - operating-system: ubuntu-latest
          python-version: '3.10'
          label: linux-64-py-3-10

    steps:
    - uses: actions/checkout@v4
    - name: Conda config
      shell: bash -l {0}
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-version: latest
        condarc-file: .condarc
        environment-file: .ci_support/environment.yml
    - name: Test
      shell: bash -l {0}
      run: |
        pip install versioneer[toml]==0.29
        pip install . --no-deps --no-build-isolation
        coverage run --omit h5io_browser/_version.py -m unittest discover tests
        coverage xml
    - name: Coveralls
      if: matrix.label == 'linux-64-py-3-13'
      uses: coverallsapp/github-action@v2

  unittest_old:
    needs: [black]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Conda config
      run: echo -e "channels:\n  - conda-forge\n" > .condarc
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: '3.9'
        miniforge-version: latest
        condarc-file: .condarc
        environment-file: .ci_support/environment-old.yml
    - name: Test
      shell: bash -l {0}
      run: |
        pip install versioneer[toml]==0.29
        pip install . --no-deps --no-build-isolation
        python -m unittest discover tests

  autobot:
    needs: [unittest_old, unittest_matrix, pip_check, notebooks]
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: (github.event.pull_request.user.login == 'dependabot[bot]' || github.event.pull_request.user.login == 'pre-commit-ci[bot]')
    steps:
      - name: Enable auto-merge for bot PRs
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
